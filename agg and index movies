use MoviesDB
// 1. Create the Movies_Data Collection and Insert Data
db.createCollection("Movies_Data");

db.Movies_Data.insertMany([
  { Movie_ID: 1, Movie_Name: "Movie A", Director: "Director X", Genre: "Action", BoxOfficeCollection: 500000 },
  { Movie_ID: 2, Movie_Name: "Movie B", Director: "Director Y", Genre: "Comedy", BoxOfficeCollection: 300000 },
  { Movie_ID: 3, Movie_Name: "Movie C", Director: "Director X", Genre: "Action", BoxOfficeCollection: 800000 },
  { Movie_ID: 4, Movie_Name: "Movie D", Director: "Director Z", Genre: "Drama", BoxOfficeCollection: 200000 },
  { Movie_ID: 5, Movie_Name: "Movie E", Director: "Director X", Genre: "Action", BoxOfficeCollection: 1000000 },
  { Movie_ID: 6, Movie_Name: "Movie F", Director: "Director Y", Genre: "Comedy", BoxOfficeCollection: 450000 },
  { Movie_ID: 7, Movie_Name: "Movie G", Director: "Director Z", Genre: "Drama", BoxOfficeCollection: 750000 },
  { Movie_ID: 8, Movie_Name: "Movie H", Director: "Director X", Genre: "Action", BoxOfficeCollection: 1200000 }
]);

// 2. Display a list stating how many Movies are directed by each “Director”.
db.Movies_Data.aggregate([
  { $group: { _id: "$Director", NumberOfMovies: { $sum: 1 } } }
]);

// 3. Display list of Movies with the highest BoxOfficeCollection in each Genre.
db.Movies_Data.aggregate([
  { $sort: { BoxOfficeCollection: -1 } },
  { $group: { _id: "$Genre", Movie: { $first: "$Movie_Name" }, HighestBoxOffice: { $first: "$BoxOfficeCollection" } } }
]);

// 4. Display list of Movies with the highest BoxOfficeCollection in each Genre in ascending order of BoxOfficeCollection.
db.Movies_Data.aggregate([
  { $sort: { BoxOfficeCollection: -1 } },
  { $group: { _id: "$Genre", Movie: { $first: "$Movie_Name" }, HighestBoxOffice: { $first: "$BoxOfficeCollection" } } },
  { $sort: { HighestBoxOffice: 1 } }
]);

// 5. Create an index on the field Movie_ID.
db.Movies_Data.createIndex({ Movie_ID: 1 });

// 6. Create an index on fields Movie_Name and Director.
db.Movies_Data.createIndex({ Movie_Name: 1, Director: 1 });

// 7. Drop the index on the field Movie_ID.
db.Movies_Data.dropIndex("Movie_ID_1");

// 8. Drop the index on fields Movie_Name and Director.
db.Movies_Data.dropIndex("Movie_Name_1_Director_1");

