-- 1. Create Tables with Referential Integrity
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR2(100),
    Cust_Address VARCHAR2(255),
    Phone_no VARCHAR2(15),
    Email_ID VARCHAR2(100),
    Age INT
);

CREATE TABLE Branch (
    Branch_ID INT PRIMARY KEY,
    Branch_Name VARCHAR2(100),
    Address VARCHAR2(255)
);

CREATE TABLE Account (
    Account_no INT PRIMARY KEY,
    Branch_ID INT,
    CustID INT,
    date_open DATE,
    Account_type VARCHAR2(50),
    Balance DECIMAL(10,2),
    FOREIGN KEY (Branch_ID) REFERENCES Branch(Branch_ID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

-- 2. Create Index on Primary Key Column of Account Table
CREATE INDEX idx_account_no ON Account(Account_no);

-- 3. Create View as Customer_Info Displaying Customer Details for Age Less Than 45
CREATE VIEW Customer_Info AS
SELECT CustID, Name, Cust_Address, Phone_no, Email_ID, Age
FROM Customer
WHERE Age < 45;

-- 4. Update the View with Open Date as 16/04/2017
UPDATE Account
SET date_open = TO_DATE('16/04/2017', 'DD/MM/YYYY')
WHERE CustID IN (SELECT CustID FROM Customer_Info);

-- 5. Create Sequence on Branch Table
CREATE SEQUENCE Branch_ID_Seq
START WITH 1
INCREMENT BY 1;

-- 6. Create Synonym 'Branch_info' for Branch Table
CREATE SYNONYM Branch_info FOR Branch;

-- Sample Data Insert (optional, you can skip if not required)
-- Insert into Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age) VALUES
(1, 'Rajesh Kumar', '123 Main Street, Pune', '1234567890', 'rajesh.kumar@example.com', 40),
(2, 'Amit Verma', '456 Park Avenue, Mumbai', '9876543210', 'amit.verma@example.com', 30),
(3, 'Priya Sharma', '789 Beach Road, Goa', '1122334455', 'priya.sharma@example.com', 25);

-- Insert into Branch table
INSERT INTO Branch (Branch_ID, Branch_Name, Address) VALUES
(101, 'Mumbai Branch', 'Mumbai, India'),
(102, 'Pune Branch', 'Pune, India'),
(103, 'Goa Branch', 'Goa, India');

-- Insert into Account table
INSERT INTO Account (Account_no, Branch_ID, CustID, date_open, Account_type, Balance) VALUES
(1001, 101, 1, TO_DATE('2015-06-15', 'YYYY-MM-DD'), 'Saving', 15000),
(1002, 102, 2, TO_DATE('2017-08-10', 'YYYY-MM-DD'), 'Current', 50000),
(1003, 103, 3, TO_DATE('2020-01-20', 'YYYY-MM-DD'), 'Saving', 25000);
