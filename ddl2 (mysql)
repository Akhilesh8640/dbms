-- 1. Create the Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,                 -- Customer ID
    Name VARCHAR(100),                      -- Customer Name
    Cust_Address VARCHAR(255),              -- Customer Address
    Phone_no VARCHAR(15),                   -- Customer Phone Number
    Email_ID VARCHAR(255),                  -- Customer Email Address
    Age INT                                 -- Customer Age
);

-- 2. Create the Branch table
CREATE TABLE Branch (
    Branch_ID INT PRIMARY KEY,              -- Branch ID
    Branch_Name VARCHAR(100),               -- Branch Name
    Address VARCHAR(255)                    -- Branch Address
);

-- 3. Create the Account table
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,             -- Account Number
    Branch_ID INT,                          -- Branch ID (foreign key)
    CustID INT,                             -- Customer ID (foreign key)
    open_date DATE,                         -- Account Open Date
    Account_type VARCHAR(50),               -- Account Type (e.g., Saving, Loan)
    Balance DECIMAL(15, 2),                 -- Account Balance
    FOREIGN KEY (Branch_ID) REFERENCES Branch(Branch_ID),  -- Foreign Key to Branch
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)       -- Foreign Key to Customer
);

-- 4. Insert sample data into the Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age)
VALUES
(101, 'John Doe', 'Mumbai', '9876543210', 'john.doe@example.com', 30),
(102, 'Alice Smith', 'Delhi', '9123456789', 'alice.smith@example.com', 25),
(103, 'Bob Johnson', 'Pune', '9328457632', 'bob.johnson@example.com', 40),
(104, 'Ankit Kumar', 'Bangalore', '9988776655', 'ankit.kumar@example.com', 35);

-- 5. Insert sample data into the Branch table
INSERT INTO Branch (Branch_ID, Branch_Name, Address)
VALUES
(1, 'Main Branch', 'Mumbai, India'),
(2, 'Pune Branch', 'Pune, India'),
(3, 'Delhi Branch', 'Delhi, India');

-- 6. Insert sample data into the Account table
INSERT INTO Account (Account_no, Branch_ID, CustID, open_date, Account_type, Balance)
VALUES
(101, 1, 101, '2020-01-15', 'Saving Account', 100000),
(102, 2, 102, '2022-05-20', 'Loan Account', 50000),
(103, 3, 103, '2018-08-16', 'Saving Account', 20000),
(104, 2, 104, '2021-07-11', 'Loan Account', 25000);

-- 7. Create a view as 'Saving_Account' to display customer details with open date as 16/8/2018
CREATE VIEW Saving_Account AS
SELECT c.CustID, c.Name, c.Cust_Address, c.Phone_no, c.Email_ID, c.Age, a.Account_no, a.open_date, a.Account_type, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Account_type = 'Saving Account' AND a.open_date = TO_DATE('2018-08-16', 'YYYY-MM-DD');

-- 8. Update the 'Saving_Account' view with Cust_Address as 'Pune' for CustID = 103
UPDATE Saving_Account
SET Cust_Address = 'Pune'
WHERE CustID = 103;

-- 9. Create a view as 'Loan_Account' to display customer details with open date as 16/2/2018
CREATE VIEW Loan_Account AS
SELECT c.CustID, c.Name, c.Cust_Address, c.Phone_no, c.Email_ID, c.Age, a.Account_no, a.open_date, a.Account_type, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Account_type = 'Loan Account' AND a.open_date = TO_DATE('2018-02-16', 'YYYY-MM-DD');

-- 10. Create an index on the primary key column of the Customer table
CREATE INDEX idx_customer_id ON Customer (CustID);

-- 11. Create an index on the primary key column of the Branch table
CREATE INDEX idx_branch_id ON Branch (Branch_ID);

-- 12. Create a sequence for the Customer table
CREATE SEQUENCE seq_customer_id
START WITH 105      -- Start the sequence at 105 (next customer ID)
INCREMENT BY 1      -- Increment by 1 for each new customer
NOCACHE;

-- 13. Create a synonym 'Cust_info' for the Branch table
CREATE SYNONYM Cust_info FOR Branch;

-- 14. Additional Query to check the created synonym 'Cust_info'
SELECT * FROM Cust_info;
