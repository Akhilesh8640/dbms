-- 1. Create the Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR(100),
    Cust_Address VARCHAR(255),
    Phone_no VARCHAR(15),
    Email_ID VARCHAR(255),
    Age INT
);

-- 2. Create the Branch table
CREATE TABLE Branch (
    Branch_ID INT PRIMARY KEY,
    Branch_Name VARCHAR(100),
    Address VARCHAR(255)
);

-- 3. Create the Account table
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,
    Branch_ID INT,
    CustID INT,
    date_open DATE,
    Account_type VARCHAR(50),
    Balance DECIMAL(15, 2),
    FOREIGN KEY (Branch_ID) REFERENCES Branch(Branch_ID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

-- 4. Insert sample data into the Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age)
VALUES
(1, 'John Doe', 'Mumbai, India', '9876543210', 'john.doe@example.com', 30),
(2, 'Alice Smith', 'Pune, India', '9123456789', 'alice.smith@example.com', 25),
(3, 'Bob Johnson', 'Delhi, India', '9328457632', 'bob.johnson@example.com', 40),
(4, 'Ankit Kumar', 'Bangalore, India', '9988776655', 'ankit.kumar@example.com', 35);

-- 5. Insert sample data into the Branch table
INSERT INTO Branch (Branch_ID, Branch_Name, Address)
VALUES
(1, 'Main Branch', 'Mumbai, India'),
(2, 'Pune Branch', 'Pune, India'),
(3, 'Delhi Branch', 'Delhi, India');

-- 6. Insert sample data into the Account table
INSERT INTO Account (Account_no, Branch_ID, CustID, date_open, Account_type, Balance)
VALUES
(101, 1, 1, '2020-01-15', 'Saving Account', 100000),
(102, 2, 2, '2022-05-20', 'Saving Account', 50000),
(103, 3, 3, '2021-03-10', 'Current Account', 20000),
(104, 2, 4, '2023-07-11', 'Saving Account', 25000);

-- 7. Modify the size of the "Email_ID" column to 20
ALTER TABLE Customer
MODIFY Email_ID VARCHAR(20);

-- 8. Change the "Email_ID" column to NOT NULL
ALTER TABLE Customer
MODIFY Email_ID VARCHAR(20) NOT NULL;

-- 9. Display total customers with balance > 50,000 Rs
SELECT COUNT(DISTINCT c.CustID) AS Total_Customers
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Balance > 50000;

-- 10. Display average balance for account type = "Saving Account"
SELECT AVG(a.Balance) AS Average_Balance
FROM Account a
WHERE a.Account_type = 'Saving Account';

-- 11. Display customer details that live in Pune or name starts with 'A'
SELECT *
FROM Customer c
WHERE c.Cust_Address LIKE '%Pune%' OR c.Name LIKE 'A%';

-- 12. Create a Saving_Account table using data from the Account table
CREATE TABLE Saving_Account AS
SELECT Account_no, Branch_ID, CustID, date_open, Balance
FROM Account
WHERE Account_type = 'Saving Account';

-- 13. Display customer details age-wise with balance >= 20,000 Rs
SELECT c.Name, c.Age, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Balance >= 20000
ORDER BY c.Age;
